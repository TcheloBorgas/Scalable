; Supervisor config file.
[supervisord]
nodaemon=true
logfile=/usr/src/app/logs/supervisord.log  ; Main log file where supervisord logs go
logfile_maxbytes=50MB                     ; Maximum log file size before rotation
loglevel=info                             ; Log level (debug, info, warn, error, critical)
user=nobody                               ; Run supervisord as 'nobody' to avoid root privileges
directory=/usr/src/app                    ; Directory to chdir to before exec'ing the child

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[unix_http_server]
file=/tmp/supervisor.sock   ; path to the socket file

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket

[program:flask]
command=python -m flask run --host=0.0.0.0 --port=5000
autostart=true
autorestart=true
stdout_logfile=/usr/src/app/logs/flask_app_stdout.log  ; Log stdout of flask here
stderr_logfile=/usr/src/app/logs/flask_app_stderr.log  ; Log stderr of flask here
user=nobody                                           ; Run the flask app as 'nobody'

[program:streamlit]
command=streamlit run app_streamlit.py --server.port 8501 --server.address=0.0.0.0
autostart=true
autorestart=true
stdout_logfile=/usr/src/app/logs/streamlit_app_stdout.log  ; Log stdout of streamlit here
stderr_logfile=/usr/src/app/logs/streamlit_app_stderr.log  ; Log stderr of streamlit here
user=nobody                                                ; Run the streamlit app as 'nobody'

[eventlistener:stdout]
command=bash -c 'while true; do echo "$(date) - still alive"; sleep 60; done'
events=PROCESS_STATE
autostart=true
autorestart=true
stdout_logfile=/usr/src/app/logs/event_stdout.log
stderr_logfile=/usr/src/app/logs/event_stderr.log
